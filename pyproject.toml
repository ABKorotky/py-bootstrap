[project]
name = "ak-py-bootstrap"
description = "Provides functionality for generating skeletons for Python projects."
readme = "README.md"
requires-python = ">=3.13"
license = "Apache-2.0"
license-files = ["LICEN[CS]E*", "AUTHORS.md"]
authors = [{name = "Aliaksandr Karotki", email = "abkorotky@gmail.com"}]
keywords = ["bootstrap", "python", "project", "template"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Framework :: tox",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "Topic :: Utilities",
]
dynamic = ["version", "dependencies"]

[project.entry-points.py_bootstrap_templates]
py_bootstrap = "py_bootstrap.templates"

[project.urls]
repository = "https://github.com/ABKorotky/py-bootstrap.git"
changelog = "https://github.com/ABKorotky/py-bootstrap/blob/main/CHANGELOG.md"

[build-system]
requires = [
    "setuptools",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic]
version = {attr = "py_bootstrap.VERSION"}
dependencies = {file = ["requirements.txt"]}

[tool.setuptools.packages.find]
include = ["py_bootstrap*"]

[tool.setuptools.package-data]
"*" = [
    "*.tmpl",
    "make.bat",
    "Makefile",
    "*.txt",
]

[project.scripts]
bootstrap = "py_bootstrap.scripts.bootstrap:main"

[tool.black]
target-version = ['py313']
line-length = 80

[tool.isort]
profile = "black"
py_version=313
skip = [".git", ".tox", ".venv"]

[tool.flake8]
exclude = [".git", ".tox", ".venv"]
max-line-length = 88
extend-ignore = ["E203", "E701"]
import-order-style = "pep8"
application-import-names = ["py_bootstrap"]

[tool.mypy]
check_untyped_defs = true
exclude = "/(.venv|templates|tst_templates)"
files = "**/*.py"
follow_imports = "silent"
ignore_missing_imports = true
python_version = "3.13"
show_error_codes = true
show_error_context = true

[[tool.mypy.overrides]]
module = "tests.*"
disable_error_code = [
    "arg-type",
    "assignment",
    "attr-defined",
    "method-assign",
]

[tool.coverage.run]
omit = ["tests/*"]
source = ["py_bootstrap"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if t.TYPE_CHECKING:",
    "if __name__ == .__main__.:",
]
fail_under = 95
omit = ["tests/*"]
